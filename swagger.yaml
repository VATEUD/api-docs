openapi: 3.0.0
info:
  title: VATEUD Core
  version: '1.0'
  description: >-
    Welcome to the documentation of VATEUD Core API
  contact:
    email: webservices@vateud.net
servers:
  - url: https://core.vateud.net/api
tags:
  - name: facility
  - name: facility/visitors
  - name: facility/user
  - name: facility/events
  - name: facility/endorsements
  - name: facility/training
  - name: facility/training/exams
  - name: division
paths:
  /facility/visitors:
    get:
      summary: >-
        Returns all pending visitor requests.
      tags:
        - facility/visitors
      security:
        - AuthorizationHeader: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/VisitorRequest'
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /{cid}/approve:
    post:
      summary: Approve a visiting request
      tags:
        - facility/visitors
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['user_cid']
              properties:
                user_cid:
                  type: integer
                  description: 'The user approving the request.'

      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  message:
                    type: string
                    enum:
                      - 'The visitor request has been approved successfully.'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - You do not have permission to approve this request.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This user does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /{cid}/deny:
    post:
      summary: Deny a visiting request
      tags:
        - facility/visitors
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['user_cid', 'reject_reason']
              properties:
                user_cid:
                  type: integer
                  description: 'The user approving the request.'
                reject_reason:
                  type: string
                  description: 'Rejection reason.'

      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  message:
                    type: string
                    enum:
                      - 'The visitor request has been rejected successfully.'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - You do not have permission to reject this request.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This user does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /{cid}/delete:
    delete:
      summary: Deletes/Removes a visitor.
      tags:
        - facility/visitors
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: integer
                
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - Validation failure.
                  message:
                    type: array
                    items: {}
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This visitor does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /{cid}:
    get:
      summary: Returns a user's details by their CID.
      tags:
        - facility/user
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  data:
                    $ref: '#/components/schemas/User'
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This user does not exist.
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /{cid}/notes:
    get:
      summary: >-
        Returns user's notes by their CID.
      tags:
        - facility/user
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TrainingNote'
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - >-
                        You do not have permission to view this controller's
                        notes.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This user does not exist.
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
    post:
      summary: Create a new training note for a user.
      tags:
        - facility/user
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['instructor_cid','position','session_type']
              properties:
                instructor_cid:
                  type: integer
                  description: 'The instructor conducting the session.'
                position:
                  type: string
                  description: 'Callsign of the position the session was held at.'
                note:
                  type: string
                  description: 'The training note/comments by instructor.'
                session_type:
                  type: integer
                  description: 'Type of session: 0 for sweatbox, 1 for online, 2 for other.'
                  minimum: 0
                  maximum: 2
                file:
                  type: string
                  format: binary
                  description: 'Upload PDF as an alternative to notes'

      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TrainingNote'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - You do not have permission to add notes to this controller.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This user does not exist.
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /{cid}/notes/cpt:
    post:
      summary: Create a CPT note for the user.
      tags:
        - facility/user
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['examiner_cid','position','cpt_pass']
              properties:
                examiner_cid:
                  type: integer
                  description: 'The examiner conducting the CPT'
                position:
                  type: string
                  description: 'Callsign of the position the session was held at.'
                note:
                  type: string
                  description: 'The training note/comments by examiner.'
                cpt_pass:
                  type: integer
                  description: 'Boolean value for CPT status.'
                  enum: [0, 1]
                file:
                  type: string
                  format: binary
                  description: 'Upload PDF as an alternative to notes'
                    
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TrainingNote'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - >-
                        You do not have permission to add notes to this controller.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This user does not exist.
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /{cid}/upgrade:
    post:
      summary: Upgrade a user's rating.
      tags:
        - facility/user
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['new_rating','instructor_cid']
              properties:
                new_rating:
                  type: integer
                  description: 'The new rating to upgrade user to.'
                  minimum: 2
                  maximum: 5
                instructor_cid:
                  type: integer
                  description: 'CID of the instructor requesting the upgrade.'

      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  message:
                    type: string
                    enum:
                      - 'Rating upgrade requested.'
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This user does not exist.
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
  /{cid}/exams:
    get:
      summary: Returns all exams attempted by the user.
      tags:
        - facility/user
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  data:
                    $ref: '#/components/schemas/ExamResult'
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This user does not exist.
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /roster:
    get:
      summary: Returns vACC's roster.
      tags:
        - facility
      security:
        - AuthorizationHeader: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      facility:
                        type: string
                      staff:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
                      controllers:
                        type: array
                        description: 'Returns an array of User CIDs that are residents'
                        example: [10000001, 10000002]
                      visitors:
                        type: array
                        description: 'Returns an array of User CIDs that are visitors.'
                        example: [10000001, 10000002]
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /:
    get:
      summary: Returns all events of the vACC.
      tags:
        - facility/events
      security:
        - AuthorizationHeader: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
    post:
      summary: Create a new vACC Event
      tags:
        - facility/events
      security:
        - AuthorizationHeader: []
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['name','description','user_cid','start','end','image_url','facilities','short_description']
              properties:
                name:
                  type: string
                  description: 'Name of the event.' 
                description:
                  type: string
                  description: 'Description of the event.'
                user_cid:
                  type: integer
                  description: 'CID of the user uploading the event.'
                short_description:
                  type: string
                  description: 'Short description of event for Discord (1000 chars max)'
                facilities:
                  type: array
                  description: 'List of all facilities that can manage the event.'
                  example: ['ADRIA', 'AUST', 'GER', 'TURK', 'NETH']
                start:
                  type: string
                  format: date-time
                end:
                  type: string
                  format: date-time
                departure:
                  type: array
                  description: An array of departure airports.
                  example: ['LTFM', 'EDDF']
                arrival:
                  type: array
                  description: An array of arrival airports.
                  example: ['LTFM', 'EDDF']
                image_url:
                  type: string
                  description: URL of the event banner.
                    
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /{id}:
    post:
      summary: Edit vACC Event
      tags:
        - facility/events
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['name','description','user_cid','start','end','image_url','facilities','short_description']
              properties:
                name:
                  type: string
                  description: 'Name of the event.' 
                description:
                  type: string
                  description: 'Description of the event.'
                user_cid:
                  type: integer
                  description: 'CID of the user uploading the event.'
                short_description:
                  type: string
                  description: 'Short description of event for Discord (1000 chars max)'
                facilities:
                  type: array
                  description: 'List of all facilities that can manage the event.'
                  example: ['ADRIA', 'AUST', 'GER', 'TURK', 'NETH']
                start:
                  type: string
                  format: date-time
                end:
                  type: string
                  format: date-time
                departure:
                  type: array
                  description: An array of departure airports.
                  example: ['LTFM', 'EDDF']
                arrival:
                  type: array
                  description: An array of arrival airports.
                  example: ['LTFM', 'EDDF']
                image_url:
                  type: string
                  description: URL of the event banner.
                    
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum: false
                  message:
                    type: string
                    enum:
                      - >-
                        You do not have the permission to edit this event.
    delete:
      summary: Delete vACC Event
      tags:
        - facility/events
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          'application/x-www-form-urlencoded':
            schema:
              type: object
              required: ['user_cid']
              properties:
                user_cid:
                  type: integer
                  description: 'CID of the user uploading the event.'
                    
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  message:
                    type: string
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum: false
                  message:
                    type: string
                    enum:
                      - >-
                        You do not have the permission to delete this event.
  /solo:
    get:
      summary: Returns all active solo endorsements of the vACC.
      tags:
        - facility/endorsements
      security:
        - AuthorizationHeader: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SoloCertification'
    post:
      summary: Create a new solo endorsement.
      tags:
        - facility/endorsements
      security:
        - AuthorizationHeader: []
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['user_cid','position','instructor_cid','expire_at']
              properties:
                user_cid:
                  type: integer
                position:
                  type: string
                  description: 'Callsign of the position.'
                instructor_cid:
                  type: integer
                expire_at:
                  type: string
                  format: date-time
                  description: 'The expiry date for the solo certification.'

      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SoloCertification'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Validation failure.
                  message:
                    type: array
                    items: {}
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - >-
                        Instructor lacking permission or user not a resident or a visiting controller in your vACC.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This user does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /solo/{solo_id}:
    delete:
      summary: Deletes a solo endorsement.
      tags:
        - facility/endorsements
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: solo_id
          required: true
          schema:
            type: integer
                
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Validation failure.
                  message:
                    type: array
                    items: {}
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This certification does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /tier-1:
    get:
      summary: Returns all active Tier 1 endorsements of the vACC.
      tags:
        - facility/endorsements
      security:
        - AuthorizationHeader: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MajorEndorsement'
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
    post:
      summary: Create a new Tier 1 endorsement.
      tags:
        - facility/endorsements
      security:
        - AuthorizationHeader: []
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['user_cid','position','instructor_cid']
              properties:
                user_cid:
                  type: integer
                position:
                  type: string
                  description: 'Callsign of the position.'
                instructor_cid:
                  type: integer
                
                
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MajorEndorsement'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Validation failure.
                  message:
                    type: array
                    items: {}
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - >-
                        Instructor lacking permission or user not a resident or a visiting controller in your vACC.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This user does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /tier-1/{endorsement_id}:
    delete:
      summary: Deletes a Tier 1 endorsement.
      tags:
        - facility/endorsements
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: endorsement_id
          required: true
          schema:
            type: integer
      
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Validation failure.
                  message:
                    type: array
                    items: {}
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This endorsement does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /tier-2:
    get:
      summary: Returns all active Tier 2 endorsements of the vACC.
      tags:
        - facility/endorsements
      security:
        - AuthorizationHeader: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MajorEndorsement'
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
    post:
      summary: Create a new Tier 2 endorsement.
      tags:
        - facility/endorsements
      security:
        - AuthorizationHeader: []
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['user_cid','position','instructor_cid']
              properties:
                user_cid:
                  type: integer
                position:
                  type: string
                  description: 'Callsign of the position.'
                instructor_cid:
                  type: integer
                
                
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MajorEndorsement'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Validation failure.
                  message:
                    type: array
                    items: {}
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - >-
                        Instructor lacking permission or user not a resident or a visiting controller in your vACC.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This user does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /tier-2/{endorsement_id}:
    delete:
      summary: Deletes a Tier 2 endorsement.
      tags:
        - facility/endorsements
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: endorsement_id
          required: true
          schema:
            type: integer
      
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Validation failure.
                  message:
                    type: array
                    items: {}
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - This endorsement does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /staff:
    get:
      summary: "Returns a list of all vACC training staff."
      tags:
        - facility/training
      security: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AtcTrainingStaff'
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /assign/{cid}/mentor:
    post:
      summary: Grant mentor access to a user
      tags:
        - facility/training
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['user_cid']
              properties:
                user_cid:
                  type: integer
                  description: 'The user granting the access.'

      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  message:
                    type: string
                    enum:
                      - 'User assigned as mentor'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - User do not have access to assign mentors.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - This user does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /remove/{cid}/mentor:
    post:
      summary: Remove mentor access to a user
      tags:
        - facility/training
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['user_cid']
              properties:
                user_cid:
                  type: integer
                  description: 'The user revoking the access.'

      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  message:
                    type: string
                    enum:
                      - 'User removed as mentor'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - User do not have access to remove mentors.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - This user does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /assign/{cid}/examiner:
    post:
      summary: Grant examiner access to a user
      tags:
        - facility/training
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['user_cid']
              properties:
                user_cid:
                  type: integer
                  description: 'The user granting the access.'

      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  message:
                    type: string
                    enum:
                      - 'User assigned as an examiner'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - User do not have access to assign examiners.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - This user does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /remove/{cid}/examiner:
    post:
      summary: Remove examiner access to a user
      tags:
        - facility/training
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['user_cid']
              properties:
                user_cid:
                  type: integer
                  description: 'The user revoking the access.'

      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  message:
                    type: string
                    enum:
                      - 'User removed as an examiner'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - User do not have access to remove examiners.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - This user does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /facility/training/exams:
    get:
      summary: "Returns a list of all active exams that can be assigned to a user."
      tags:
        - facility/training/exams
      security: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Exams'
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'  
  /assign:
    get:
      summary: "Returns a list of all exam assignments (assigned to user)."
      tags:
        - facility/training/exams
      security: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExamAssignment'
    post:
      summary: Assign a new exam.
      tags:
        - facility/training/exams
      security:
        - AuthorizationHeader: []
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['user_cid','exam_id','instructor_cid']
              properties:
                user_cid:
                  type: integer
                  description: 'The user to whom the exam is to be assigned.'
                exam_id:
                  type: integer
                  description: 'Id of the exam to be assigned.'
                instructor_cid:
                  type: integer
                  description: 'CID of the user assigning the exam.'

      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExamAssignment'
        '400':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum: false
                  message:
                    type: string
                    enum:
                      - This student already has an assignment pending for this exam.
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum: false
                  message:
                    type: string
                    enum:
                      - You do not have permission to assign this exam.
                      - The instructor does not have permission to assign exams.
                      - The controller you are assigning an exam for is not a home controller, or visitor in your vACC.
  /assign/{id}:  
    delete:
      summary: Delete exam assignment
      tags:
        - facility/training/exams
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID of the exam assignment.'
          schema:
            type: integer
                    
                    
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  message:
                    type: string
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum: false
                  message:
                    type: string
                    enum:
                      - You do not have the permission to delete this assignment.  
  /reassignments:
    get:
      summary: Returns a list of all re-assignments (awaiting to be assigned again by system).
      tags:
        - facility/training/exams
      security: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExamReassignment'
  /reassignments/{id}:
    delete:
      summary: Delete exam re-assignment
      tags:
        - facility/training/exams
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID of the exam re-assignment.'
          schema:
            type: integer
                    
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  message:
                    type: string
    
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum: false
                  message:
                    type: string
                    enum:
                      - You do not have the permission to delete this re-assignment.
  /division/events:
    get:
      summary: Returns list of next 15 events.
      tags:
        - division
      security: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
components:
  schemas:
    AtcTrainingStaff:
      type: object
      properties:
        id:
          type: integer
        cid:
          type: integer
        access_type:
          type: integer
          description: "0 = mentor, 1 = examiner, 2 = both"
          enum: [0, 2]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Exams:
      type: object
      properties:
        id:
          type: integer
        exam_name:
          type: string
        exam_status:
          type: integer
        required_questions:
          type: integer
        pass_percentage:
          type: integer
        retake_days:
          type: integer
        required_cbt:
          type: boolean
        premature_results:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Event:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        image_url:
          type: string
        start:
          type: string
        end:
          type: string
        airports:
          type: object
          properties:
            arrival:
              type: array
              nullable: true
              items:
                type: string
            departure:
              type: array
              nullable: true
              items:
                type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        forum_url:
          type: string
    User:
      type: object
      properties:
        cid:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        facility:
          type: integer
          description: ID of the user's vACC.
        facility_join:
          type: string
        rating:
          type: integer
          description: User's VATSIM rating.
        last_api_check:
          type: string
          description: Last time user was checked against VATSIM's API.
        email_preferences:
          type: integer
          description: Bitmap of user's email preferences.
        preferences_read:
          type: boolean
          description: If they have viewed their email notification settings.
    TrainingNote:
      type: object
      properties:
        id:
          type: integer
        user_cid:
          type: integer
        instructor_cid:
          type: integer
        facility_id:
          type: integer
          description: ID of the vACC the note was created in.
        position_trained:
          type: string
          description: Callsign of the position this session was held at.
        training_note:
          type: string
        session_type:
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        marking_sheet:
          type: string
          description: URL of the CPT sheet (if uploaded)
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    MajorEndorsement:
      type: object
      properties:
        id:
          type: integer
        user_cid:
          type: integer
        instructor_cid:
          type: integer
        position:
          type: string
        facility:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    SoloCertification:
      type: object
      properties:
        id:
          type: integer
        user_cid:
          type: integer
        instructor_cid:
          type: integer
        position:
          type: string
        expiry:
          type: string
          format: date-time
        max_days:
          type: integer
        facility:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ExamAssignment: 
      type: object
      properties:
        id:
          type: integer
        exam_id:
          type: integer
        user_cid:
          type: integer
        instructor_cid:
          type: integer
        expires:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ExamReassignment:
      type: object
      properties:
        id:
          type: integer
        exam_id:
          type: integer
        user_cid:
          type: integer
        instructor_cid:
          type: integer
        reassign_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ExamResult:
      type: object
      properties:
        id:
          type: integer
        user_cid:
          type: integer
        score:
          type: integer
        passed:
          type: boolean
        exam_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    VisitorRequest:
      type: object
      properties:
        id:
          type: integer
        user_cid:
          type: integer
        reason:
          type: string
        status:
          type: integer
          enum: 
            - 0
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
  securitySchemes:
    AuthorizationHeader:
      type: apiKey
      name: X-API-KEY
      in: header
  responses:
    NoApiKey:
      description: No API key found in request.
      content:
        'application/json':
          schema:
            type: object
            properties:
              message:
                type: string
                enum:
                  - Invalid API key.
              message:
                type: string
                enum:
                  - >-
                    No API key was found in headers. If you are attempting to use the X-API-KEY header, it was not included in your request.
    InvalidApiKey:
      description: API key does not exist.
      content:
        'application/json':
          schema:
            type: object
            properties:
              message:
                type: string
                enum:
                  - Invalid API key.
              api_key:
                type: string