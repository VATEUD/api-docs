openapi: 3.0.0
info:
  title: VATEUD Core
  version: '1.0'
  description: >-
    Welcome to the documentation of VATEUD Core API
  contact:
    email: webservices@vateud.net
servers:
  - url: https://core.vateud.net/api
tags:
  - name: facility
  - name: facility/user
  - name: facility/events
  - name: facility/solo
  - name: facility/endorsements
  - name: facility/training/exams
  - name: division
paths:
  /facility/user/{cid}:
    get:
      summary: Returns a user's details by their CID.
      tags:
        - facility/user
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  data:
                    $ref: '#/components/schemas/User'
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - This user does not exist.
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /facility/user/{cid}/notes:
    get:
      summary: >-
        Returns user's notes by their CID.
      tags:
        - facility/user
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/TrainingNote'
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - >-
                        You do not have permission to view this controller's
                        notes.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - This user does not exist.
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
    post:
      summary: Create a new training note for a user.
      tags:
        - facility/user
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['instructor_cid','position','session_type']
              properties:
                instructor_cid:
                  type: integer
                  description: 'The instructor conducting the session.'
                position:
                  type: string
                  description: 'Callsign of the position the session was held at.'
                note:
                  type: string
                  description: 'The training note/comments by instructor.'
                session_type:
                  type: integer
                  description: 'Type of session: 0 for sweatbox, 1 for online, 2 for other.'
                  minimum: 0
                  maximum: 2
                file:
                  type: string
                  format: binary
                  description: 'Upload PDF as an alternative to notes'

      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/TrainingNote'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - You do not have permission to add notes to this controller.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - This user does not exist.
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /facility/user/{cid}/notes/cpt:
    post:
      summary: Create a CPT note for the user.
      tags:
        - facility/user
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['examiner_cid','position','cpt_pass']
              properties:
                examiner_cid:
                  type: integer
                  description: 'The examiner conducting the CPT'
                position:
                  type: string
                  description: 'Callsign of the position the session was held at.'
                note:
                  type: string
                  description: 'The training note/comments by examiner.'
                cpt_pass:
                  type: boolean
                  description: 'Boolean value for CPT status.'
                file:
                  type: string
                  format: binary
                  description: 'Upload PDF as an alternative to notes'
                    
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/TrainingNote'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - >-
                        You do not have permission to add notes to this controller.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - This user does not exist.
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /facility/roster:
    get:
      summary: Returns vACC's roster.
      tags:
        - facility
      security:
        - AuthorizationHeader: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      facility:
                        type: string
                      staff:
                        type: object
                        items:
                          $ref: '#/components/schemas/User'
                      controllers:
                        type: integer
                      visitors:
                        type: integer
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /facility/events:
    get:
      summary: Returns all events of the vACC.
      tags:
        - facility/events
      security:
        - AuthorizationHeader: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /facility/events/create:
    post:
      summary: Create a new vACC Event
      tags:
        - facility/events
      security:
        - AuthorizationHeader: []
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['name','description','user_cid','start','end','image_url']
              properties:
                name:
                  type: string
                  description: 'Name of the event.' 
                description:
                  type: string
                  description: 'Description of the event.'
                user_cid:
                  type: integer
                  description: 'CID of the user uploading the event.'
                start:
                  type: string
                  format: date-time
                end:
                  type: string
                  format: date-time
                departure:
                  type: array
                  description: An array of departure airports.
                  example: ['LTFM', 'EDDF']
                arrival:
                  type: array
                  description: An array of arrival airports.
                  example: ['LTFM', 'EDDF']
                image_url:
                  type: string
                  description: URL of the event banner.
                    
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /facility/events/{id}:
    post:
      summary: Edit vACC Event
      tags:
        - facility/events
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['name','description','user_cid','start','end','image_url']
              properties:
                name:
                  type: string
                  description: 'Name of the event.' 
                description:
                  type: string
                  description: 'Description of the event.'
                user_cid:
                  type: integer
                  description: 'CID of the user uploading the event.'
                start:
                  type: string
                  format: date-time
                end:
                  type: string
                  format: date-time
                departure:
                  type: array
                  description: An array of departure airports.
                  example: ['LTFM', 'EDDF']
                arrival:
                  type: array
                  description: An array of arrival airports.
                  example: ['LTFM', 'EDDF']
                image_url:
                  type: string
                  description: URL of the event banner.
                    
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum: false
                  message:
                    type: string
                    enum:
                      - >-
                        You do not have the permission to edit this event.
    delete:
      summary: Delete vACC Event
      tags:
        - facility/events
      security:
        - AuthorizationHeader: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['user_cid']
              properties:
                user_cid:
                  type: integer
                  description: 'CID of the user uploading the event.'
                    
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  message:
                    type: string
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum: false
                  message:
                    type: string
                    enum:
                      - >-
                        You do not have the permission to delete this event.
  /facility/solo:
    get:
      summary: Returns all active solo endorsements of the vACC.
      tags:
        - facility/solo
      security:
        - AuthorizationHeader: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SoloCertification'
    post:
      summary: Create a new solo certification.
      tags:
        - facility/solo
      security:
        - AuthorizationHeader: []
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['user_cid','position','instructor_cid','expiry_days']
              properties:
                user_cid:
                  type: integer
                position:
                  type: string
                  description: 'Callsign of the position.'
                instructor_cid:
                  type: integer
                expiry_days:
                  type: integer
                  description: 'Number of days to issue solo certification for.'
                  pattern: '[1-30]'
                
                
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SoloCertification'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - Validation failure.
                  message:
                    type: array
                    items: {}
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - >-
                        Instructor lacking permission or user not a resident or a visiting controller in your vACC.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - This user does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
    delete:
      summary: Deletes a solo certification.
      tags:
        - facility/solo
      security:
        - AuthorizationHeader: []
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['certification_id']
              properties:
                certification_id:
                  type: integer
                
                
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - Validation failure.
                  message:
                    type: array
                    items: {}
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - This certification does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /facility/endorsements:
    get:
      summary: Returns all active major endorsements of the vACC.
      tags:
        - facility/endorsements
      security:
        - AuthorizationHeader: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MajorEndorsement'
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - This facility does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
    post:
      summary: Create a new major endorsement.
      tags:
        - facility/endorsements
      security:
        - AuthorizationHeader: []
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['user_cid','position','instructor_cid']
              properties:
                user_cid:
                  type: integer
                position:
                  type: string
                  description: 'Callsign of the position.'
                instructor_cid:
                  type: integer
                
                
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MajorEndorsement'
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - Validation failure.
                  message:
                    type: array
                    items: {}
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - >-
                        Instructor lacking permission or user not a resident or a visiting controller in your vACC.
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - This user does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
    delete:
      summary: Deletes a major endorsement.
      tags:
        - facility/endorsements
      security:
        - AuthorizationHeader: []
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['endorsement_id']
              properties:
                endorsement_id:
                  type: integer
                
                
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - Validation failure.
                  message:
                    type: array
                    items: {}
        '404':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - This endorsement does not exist.
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
  /facility/training/exams:
    get:
      summary: "Return all active exams that can be assigned."
      tags:
        - facility/training/exams
      security: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Exams'
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'  
  /facility/training/exams/assign:
    get:
      summary: Returns a list of all assignments.
      tags:
        - facility/training/exams
      security: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExamAssignment'
    post:
      summary: Assign a new exam.
      tags:
        - facility/training/exams
      security:
        - AuthorizationHeader: []
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['user_cid','exam_id','instructor_cid']
              properties:
                user_cid:
                  type: integer
                  description: 'The user to whom the exam is to be assigned.'
                exam_id:
                  type: integer
                  description: 'Id of the exam to be assigned.'
                instructor_cid:
                  type: integer
                  description: 'CID of the user assigning the exam.'

      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExamAssignment'
        '400':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum: false
                  error:
                    type: string
                    enum:
                      - This student already has an assignment pending for this exam.
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum: false
                  message:
                    type: string
                    enum:
                      - You do not have permission to assign this exam.
                      - The instructor does not have permission to assign exams.
                      - The controller you are assigning an exam for is not a home controller, or visitor in your vACC.
    delete:
      summary: Delete exam assignment
      tags:
        - facility/training/exams
      security:
        - AuthorizationHeader: []
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['id']
              properties:
                id:
                  type: integer
                  description: 'ID of the exam assignment.'
                    
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  message:
                    type: string
        '422':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - Validation failure.
                  hint:
                    type: array
                    items: {}
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum: false
                  message:
                    type: string
                    enum:
                      - You do not have the permission to delete this assignment.  
  /facility/training/exams/reassignments:
    get:
      summary: Returns a list of all re-assignments.
      tags:
        - facility/training/exams
      security: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExamReassignment'

    delete:
      summary: Delete exam re-assignment
      tags:
        - facility/training/exams
      security:
        - AuthorizationHeader: []
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              required: ['id']
              properties:
                id:
                  type: integer
                  description: 'ID of the exam re-assignment.'
                    
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                  message:
                    type: string
    
        '401.1':
          $ref: '#/components/responses/NoApiKey'
        '401.2':
          $ref: '#/components/responses/InvalidApiKey'
        '403':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum: false
                  message:
                    type: string
                    enum:
                      - You do not have the permission to delete this re-assignment.
  /division/events:
    get:
      summary: Returns list of next 15 events.
      tags:
        - division
      security: []
      responses:
        '200':
          description: ''
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
components:
  schemas:
    Exams:
      type: object
      properties:
        id:
          type: integer
        exam_name:
          type: string
        exam_status:
          type: integer
        required_questions:
          type: integer
        pass_percentage:
          type: integer
        retake_days:
          type: integer
        required_cbt:
          type: boolean
        premature_results:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Event:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        image_url:
          type: string
        start:
          type: string
        end:
          type: string
        airports:
          type: object
          properties:
            arrival:
              type: array
              nullable: true
              items:
                type: string
            departure:
              type: array
              nullable: true
              items:
                type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        forum_url:
          type: string
    User:
      type: object
      properties:
        cid:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        facility:
          type: integer
          description: ID of the user's vACC.
        facility_join:
          type: string
        rating:
          type: integer
          description: User's VATSIM rating.
        last_api_check:
          type: string
          description: Last time user was checked against VATSIM's API.
        email_preferences:
          type: integer
          description: Bitmap of user's email preferences.
        preferences_read:
          type: boolean
          description: If they have viewed their email notification settings.
    TrainingNote:
      type: object
      properties:
        id:
          type: integer
        user_cid:
          type: integer
        instructor_cid:
          type: integer
        facility_id:
          type: integer
          description: ID of the vACC the note was created in.
        position_trained:
          type: string
          description: Callsign of the position this session was held at.
        training_note:
          type: string
        session_type:
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        marking_sheet:
          type: string
          description: URL of the CPT sheet (if uploaded)
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    MajorEndorsement:
      type: object
      properties:
        id:
          type: integer
        user_cid:
          type: integer
        instructor_cid:
          type: integer
        position:
          type: string
        facility:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    SoloCertification:
      type: object
      properties:
        id:
          type: integer
        user_cid:
          type: integer
        instructor_cid:
          type: integer
        position:
          type: string
        expiry:
          type: string
          format: date-time
        max_days:
          type: integer
        facility:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ExamAssignment: 
      type: object
      properties:
        id:
          type: integer
        exam_id:
          type: integer
        user_cid:
          type: integer
        instructor_cid:
          type: integer
        expires:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ExamReassignment:
      type: object
      properties:
        id:
          type: integer
        exam_id:
          type: integer
        user_cid:
          type: integer
        instructor_cid:
          type: integer
        reassign_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

  securitySchemes:
    AuthorizationHeader:
      type: apiKey
      name: X-API-KEY
      in: header
  responses:
    NoApiKey:
      description: No API key found in request.
      content:
        'application/json':
          schema:
            type: object
            properties:
              error:
                type: string
                enum:
                  - Invalid API key.
              message:
                type: string
                enum:
                  - >-
                    No API key was found in headers. If you are attempting to use the X-API-KEY header, it was not included in your request.
    InvalidApiKey:
      description: API key does not exist.
      content:
        'application/json':
          schema:
            type: object
            properties:
              error:
                type: string
                enum:
                  - Invalid API key.
              api_key:
                type: string